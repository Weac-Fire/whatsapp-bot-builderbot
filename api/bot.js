const { createBot, createProvider, createFlow, addKeyword, MemoryDB } = require('@builderbot/bot')
const { BaileysProvider } = require('@builderbot/provider-baileys')

// Fluxo de boas-vindas
const welcomeFlow = addKeyword(['oi', 'ol√°', 'hello', 'hi'])
    .addAnswer('ü§ñ Ol√°! Sou seu assistente virtual!')
    .addAnswer('Como posso te ajudar hoje?')
    .addAnswer([
        'üëâ Digite *info* para informa√ß√µes',
        'üëâ Digite *contato* para falar conosco',
        'üëâ Digite *horario* para hor√°rio de funcionamento'
    ])

// Fluxo de informa√ß√µes
const infoFlow = addKeyword(['info', 'informa√ß√£o', 'informa√ß√µes'])
    .addAnswer('‚ÑπÔ∏è *Informa√ß√µes da empresa:*')
    .addAnswer('Somos uma empresa focada em atendimento de qualidade!')
    .addAnswer('Para mais informa√ß√µes, digite *contato*')

// Fluxo de contato
const contactFlow = addKeyword(['contato', 'falar', 'conversar'])
    .addAnswer('üìû *Nossos contatos:*')
    .addAnswer('üìß Email: contato@empresa.com')
    .addAnswer('üì± WhatsApp: (11) 99999-9999')
    .addAnswer('üåê Site: www.empresa.com')

// Fluxo de hor√°rio
const scheduleFlow = addKeyword(['horario', 'hor√°rio', 'funcionamento'])
    .addAnswer('üïí *Hor√°rio de funcionamento:*')
    .addAnswer('Segunda a Sexta: 8h √†s 18h')
    .addAnswer('S√°bado: 8h √†s 12h')
    .addAnswer('Domingo: Fechado')

// Fluxo padr√£o para mensagens n√£o reconhecidas
const fallbackFlow = addKeyword([''])
    .addAnswer('‚ùì N√£o entendi sua mensagem.')
    .addAnswer('Digite uma das op√ß√µes:')
    .addAnswer([
        'üëâ *info* - Informa√ß√µes',
        'üëâ *contato* - Nossos contatos', 
        'üëâ *horario* - Hor√°rio de funcionamento'
    ])

// Inicializar bot
let bot = null;

const initBot = async () => {
    if (!bot) {
        const adapterDB = new MemoryDB()
        const adapterFlow = createFlow([
            welcomeFlow, 
            infoFlow, 
            contactFlow, 
            scheduleFlow,
            fallbackFlow
        ])
        const adapterProvider = createProvider(BaileysProvider)
        
        bot = await createBot({
            flow: adapterFlow,
            provider: adapterProvider,
            database: adapterDB,
        })
        
        console.log('üöÄ Bot iniciado com sucesso!')
        console.log('üì± Escaneie o QR Code para conectar o WhatsApp')
    }
    return bot
}

// Handler para Vercel
module.exports = async (req, res) => {
    try {
        await initBot()
        
        if (req.method === 'GET') {
            return res.status(200).json({ 
                status: 'Bot WhatsApp funcionando!',
                message: 'Escaneie o QR Code para conectar',
                timestamp: new Date().toISOString()
            })
        }
        
        // Handle webhook do WhatsApp
        if (req.method === 'POST') {
            // Processar mensagens do WhatsApp aqui
            return res.status(200).json({ success: true })
        }
        
        res.status(405).json({ error: 'M√©todo n√£o permitido' })
    } catch (error) {
        console.error('Erro no bot:', error)
        res.status(500).json({ error: 'Erro interno do servidor' })
    }
}
